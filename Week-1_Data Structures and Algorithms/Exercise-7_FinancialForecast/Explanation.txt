This Java program computes the future value of an investment using a recursive algorithm with a fixed annual growth rate over a specified period. The growthresult method is the core recursive function, accepting three parameters: the number of periods (periods), the annual growth rate (growthrate), and the initial investment (principal_Amount). It recursively calls itself, decreasing the period by one until it reaches the base case (periods --> 0), which returns the initial investment. Each recursive step applies compound growth by multiplying the result by (1 + growthrate). In the main method, the program calculates the future value for an initial investment of 1999.0 units, a 35% growth rate, and a 5-year period, printing the result with two decimal places.

The algorithmâ€™s time complexity is O(n),where n is the number of periods, due to one recursive call per period. The space complexity is also O(n) because the recursion stack grows linearly with the number of calls. For small n, this approach is clear and effective,but for large n, an iterative method would be better to avoid stack overflow.